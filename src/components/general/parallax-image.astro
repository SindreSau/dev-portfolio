---
import type { ImageMetadata } from "astro";
import Picture from "astro/components/Picture.astro";

interface Props {
    src: ImageMetadata | Promise<{ default: ImageMetadata }>;
    alt: string;
    title: string;
    class?: string;
    imageClass?: string;
    containerClass?: string;
    format?: "avif" | "webp" | "jpeg" | "jpg" | "png" | "gif" | "svg";
    loading?: "lazy" | "eager" | undefined;
    width?: number;
    height?: number;
    quality?: number | "low" | "mid" | "high" | "max" | undefined;
    widths?: number[];
}

const {
    src,
    alt,
    title,
    class: className,
    imageClass,
    containerClass,
    format,
    loading,
    width,
    height,
    quality,
    widths,
} = Astro.props;
---

<div class:list={["image-parallax-container", containerClass]}>
    <Picture
        src={src}
        alt={alt}
        title={title}
        class:list={["parallax-image", imageClass]}
        format={format}
        loading={loading}
        width={width}
        height={height}
        quality={quality}
        widths={widths}
    />
</div>

<style>
    .image-parallax-container {
        position: relative;
        overflow: hidden;
    }

    .parallax-image {
        position: absolute;
        width: 100%;
        height: 130%;
        object-fit: cover;
        top: -15%;
        left: 0;
    }
</style>

<script>
    import gsap from "gsap";
    import { ScrollTrigger } from "gsap/ScrollTrigger";

    gsap.registerPlugin(ScrollTrigger);

    document.addEventListener("astro:page-load", () => {
        ScrollTrigger.getAll().forEach(trigger => {
            if (
                trigger.vars.trigger &&
                typeof trigger.vars.trigger === "string" &&
                trigger.vars.trigger.startsWith(".image-parallax-container")
            ) {
                trigger.kill();
            }
        });

        const parallaxContainers = document.querySelectorAll(
            ".image-parallax-container"
        );

        parallaxContainers.forEach(container => {
            const image = container.querySelector(
                ".parallax-image"
            ) as HTMLElement;
            if (image) {
                gsap.set(image, { y: "0%" });

                gsap.fromTo(
                    image,
                    { y: "0%" },
                    {
                        scrollTrigger: {
                            trigger: container,
                            start: "top bottom",
                            end: "bottom top",
                            scrub: true,
                            invalidateOnRefresh: true,
                            markers: false,
                        },
                        y: "-20%",
                        ease: "none",
                    }
                );
            }
        });
    });

    document.addEventListener("astro:before-swap", () => {
        ScrollTrigger.getAll().forEach(trigger => {
            if (
                trigger.vars.trigger &&
                typeof trigger.vars.trigger === "string" &&
                trigger.vars.trigger.startsWith(".image-parallax-container")
            ) {
                trigger.kill();
            }
        });
    });
</script>
