---
import { Icon } from "astro-icon/components";
import { techData } from "./tech-data";

// Filter tech by plane
const plane1Tech = techData.filter(tech => tech.plane === 1);
const plane2Tech = techData.filter(tech => tech.plane === 2);
const plane3Tech = techData.filter(tech => tech.plane === 3);
---

<div
    id="mobile-planes-wrapper"
    class="relative w-full h-screen overflow-visible max-w-[1440px] text-primary-muted md:hidden block pointer-events-auto"
>
    <div
        id="mobile-plane-1"
        class="plane-near w-full h-1/2 absolute z-0 pointer-events-none"
    >
        {
            plane1Tech.map(tech => (
                <a
                    href="/experience-cv#technical-skills"
                    class="codelang-card absolute mobile-icon block pointer-events-auto"
                    style={`top: ${tech.mobileTop}; left: ${tech.mobileLeft};`}
                    data-tech-name={tech.name}
                    aria-label={`Technology: ${tech.name || "icon"}`}
                >
                    <Icon
                        name={`${tech.iconifyPkg}:${tech.iconifyIcon}`}
                        class="size-12"
                    />
                </a>
            ))
        }
    </div>

    <div class="opacity-65 pointer-events-none">
        <div
            id="mobile-plane-2"
            class="plane-mid w-full h-1/2 absolute -z-10 pointer-events-none"
        >
            {
                plane2Tech.map(tech => (
                    <a
                        href="/experience-cv#technical-skills"
                        class="codelang-card absolute mobile-icon block pointer-events-auto"
                        style={`top: ${tech.mobileTop}; left: ${tech.mobileLeft};`}
                        data-tech-name={tech.name}
                        aria-label={`Technology: ${tech.name || "icon"}`}
                    >
                        <Icon
                            name={`${tech.iconifyPkg}:${tech.iconifyIcon}`}
                            class="size-8"
                        />
                    </a>
                ))
            }
        </div>
    </div>

    <div class="opacity-40 pointer-events-none">
        <div
            id="mobile-plane-3"
            class="plane-far w-full h-1/2 absolute -z-20 pointer-events-none"
        >
            {
                plane3Tech.map(tech => (
                    <a
                        href="/experience-cv#technical-skills"
                        class="codelang-card absolute mobile-icon block pointer-events-auto"
                        style={`top: ${tech.mobileTop}; left: ${tech.mobileLeft};`}
                        data-tech-name={tech.name}
                        aria-label={`Technology: ${tech.name || "icon"}`}
                    >
                        <Icon
                            name={`${tech.iconifyPkg}:${tech.iconifyIcon}`}
                            class="size-5"
                        />
                    </a>
                ))
            }
        </div>
    </div>
</div>

<script>
    import { gsap } from "gsap";
    import { ScrollTrigger } from "gsap/ScrollTrigger";

    // Initialize context variable with proper typing
    let ctx: gsap.Context | null = null;

    document.addEventListener("astro:page-load", () => {
        if (typeof gsap === "undefined") {
            console.error("GSAP is not defined. Make sure it is loaded.");
            return;
        }

        // Register GSAP plugins
        gsap.registerPlugin(ScrollTrigger);

        // Clean up previous animations
        ScrollTrigger.disable(false);
        ScrollTrigger.enable();
        ctx && ctx.revert();

        // Create new GSAP context
        ctx = gsap.context(() => {
            const mobilePlane1 = document.getElementById("mobile-plane-1");
            const mobilePlane2 = document.getElementById("mobile-plane-2");
            const mobilePlane3 = document.getElementById("mobile-plane-3");
            const mobilePlanesWrapper = document.getElementById(
                "mobile-planes-wrapper"
            );

            if (
                !mobilePlane1 ||
                !mobilePlane2 ||
                !mobilePlane3 ||
                !mobilePlanesWrapper
            ) {
                return;
            }

            // Initial fade-in animation for each plane
            gsap.fromTo(
                mobilePlane1,
                { opacity: 0, scale: 0.8 },
                { opacity: 0.9, scale: 1, duration: 1.25, delay: 0.2 }
            );
            gsap.fromTo(
                mobilePlane2,
                { opacity: 0, scale: 0.8 },
                { opacity: 0.65, scale: 1, duration: 1.25, delay: 0.4 }
            );
            gsap.fromTo(
                mobilePlane3,
                { opacity: 0, scale: 0.8 },
                { opacity: 0.45, scale: 1, duration: 1.25, delay: 0.6 }
            );

            // Get all mobile icons for small movement animations
            const mobileIcons = document.querySelectorAll(".mobile-icon");

            // Create small float animations for each icon
            mobileIcons.forEach(icon => {
                // Create random values for each icon's animation
                const randomDuration = 2 + Math.random() * 2; // Between 2-4 seconds
                const randomXAmplitude = Math.random() * 8; // Between 0-8px
                const randomYAmplitude = Math.random() * 6; // Between 0-6px
                const randomDelay = Math.random() * 1.2; // Between 0-1 seconds

                // Apply floating animation
                gsap.to(icon, {
                    x: randomXAmplitude,
                    y: randomYAmplitude,
                    duration: randomDuration,
                    repeat: -1, // Infinite repeat
                    yoyo: true, // Animate back and forth
                    ease: "sine.inOut",
                    delay: randomDelay,
                });

                // Add a small rotation for some icons
                if (Math.random() > 0.5) {
                    gsap.to(icon, {
                        rotation: Math.random() * 10 - 5, // Between -5 and 5 degrees
                        duration: randomDuration * 1.5,
                        repeat: -1,
                        yoyo: true,
                        ease: "sine.inOut",
                        delay: randomDelay,
                    });
                }
            });

            // Scroll effect to fade out and move icons when scrolling down
            ScrollTrigger.create({
                trigger: "body",
                start: "top top",
                end: "43% top",
                scrub: 1,
                onUpdate: self => {
                    const progress = self.progress;

                    // Fade out all planes
                    gsap.to(mobilePlane1, {
                        opacity: 1 - progress * 1.2, // Fade out faster
                        y: progress * -30, // Move down as we scroll
                        duration: 0.2,
                        ease: "power1.out",
                    });
                    gsap.to(mobilePlane2, {
                        opacity: 1 - progress * 1.1, // Fade out faster
                        y: progress * -90, // Move down as we scroll
                        duration: 0.2,
                        ease: "power1.out",
                    });
                    gsap.to(mobilePlane3, {
                        opacity: 1 - progress * 1.05, // Fade out faster
                        y: progress * -180, // Move down as we scroll
                        duration: 0.2,
                        ease: "power1.out",
                    });
                },
            });
        });
    });

    // Clean up on page leave
    document.addEventListener("astro:before-swap", () => {
        ctx && ctx.revert();
    });
</script>
