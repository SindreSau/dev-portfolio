---
import HeroSection from "@/components/home/hero-section.astro";
import Layout from "@/layouts/Layout.astro";

import techbbqImage from "@/assets/images/tech-bbq.jpeg";
import Picture from "astro/components/Picture.astro";

// Check if I have graduated
const today = new Date();
const finishedGrad = new Date("2025-06-18");
const isAfterGrad = today > finishedGrad;
---

<Layout>
    <HeroSection />

    <section id="hero-short-info" class="flex flex-col gap-6 w-full">
        <article
            class="grid grid-cols-1 md:grid-cols-2 gap-4 scroll-fadein items-center justify-center"
        >
            <div
                id="hero-short-info-text"
                class="flex flex-col gap-2 md:text-justify"
            >
                <h2 class="text-primary md:text-4xl">Fullstack Developer</h2>
                <p class="md:text-lg leading-7">
                    I'm a passionate full-stack developer
                    {
                        isAfterGrad ? (
                            <>
                                who just graduated with a Bachelor's degree in
                                Information Technology from OsloMet.
                            </>
                        ) : (
                            <>
                                - currently wrapping up my Bachelor's degree in
                                Information Technology at OsloMet.
                            </>
                        )
                    }
                </p>
                <p class="md:text-lg leading-7">
                    I began my career as a performing musician, where dedication
                    and hard work were essential. Seeking the 9-5 lifestyle, I
                    transitioned into software development â€” and quickly found a
                    similar enthusiasm for coding and problemsolving.
                </p>
            </div>
            <div
                class="image-parallax-container rounded-image aspect-[8/12] md:mx-14 mx-8"
            >
                <Picture
                    src={techbbqImage}
                    alt="Sindre at TechBBQ 2024"
                    title={"Sindre at TechBBQ 2024"}
                    class="parallax-image"
                    format="avif"
                    loading="lazy"
                    width={1877}
                    height={3336}
                    quality={40}
                    widths={[256, 540, 768, 1024]}
                />
            </div>
        </article>
    </section>
</Layout>

<style>
    .image-parallax-container {
        position: relative;
        overflow: hidden;
    }

    .parallax-image {
        position: absolute;
        width: 100%;
        height: 130%; /* Just slightly taller than the container */
        object-fit: cover;
        top: -1%; /* Start with a slight offset to crop top */
        left: 0;
    }
</style>

<script>
    import gsap from "gsap";
    import { ScrollTrigger } from "gsap/ScrollTrigger";

    let ctx: gsap.Context | null = null;

    document.addEventListener("astro:page-load", () => {
        gsap.registerPlugin(ScrollTrigger);
        ScrollTrigger.disable(false);
        ScrollTrigger.enable();
        ctx && ctx.revert();

        ctx = gsap.context(() => {
            let mm = gsap.matchMedia();

            // Mobile animation for viewports under 769px.
            mm.add("(max-width: 768px)", () => {
                const tl = gsap.timeline({
                    scrollTrigger: {
                        trigger: "#hero-short-info",
                        start: "top 90%",
                        end: "top 20%",
                        scrub: true,
                    },
                });

                tl.to("#hero-short-info", {
                    y: -60,
                    duration: 0.5,
                    ease: "power4.inOut",
                });

                // Parallax effect for image - Mobile version.
                gsap.fromTo(
                    ".parallax-image",
                    { y: "0%" },
                    {
                        scrollTrigger: {
                            trigger: ".image-parallax-container",
                            start: "top bottom",
                            end: "bottom top",
                            scrub: true,
                            markers: false,
                        },
                        y: "-15%",
                        ease: "none",
                    }
                );
            });

            mm.add("(min-width: 769px)", () => {
                const tl = gsap.timeline({
                    scrollTrigger: {
                        trigger: "#hero-short-info",
                        start: "top bottom",
                        end: "top 70%",
                        scrub: true,
                        markers: false,
                    },
                });

                tl.to("#hero-short-info", {
                    translateY: -400,
                    duration: 1,
                    ease: "power1.out",
                    stagger: {
                        amount: 0.5,
                        from: "end",
                    },
                });

                // Parallax effect for image - Desktop
                gsap.fromTo(
                    ".parallax-image",
                    { y: "0%" },
                    {
                        scrollTrigger: {
                            trigger: ".image-parallax-container",
                            start: "top bottom",
                            end: "bottom top",
                            scrub: true,
                        },
                        y: "-20%",
                        ease: "none",
                    }
                );

                gsap.fromTo(
                    "#hero-short-info-text",
                    { translateY: -90 },
                    {
                        scrollTrigger: {
                            trigger: "#hero-short-info-text",
                            start: "top bottom",
                            end: "top 70%",
                            scrub: true,
                            markers: false,
                        },
                        translateY: 40,
                        duration: 0.5,
                        ease: "power1.inOut",
                    }
                );
            });
        });
    });

    // Clean up on page swap.
    document.addEventListener("astro:before-swap", () => {
        ctx && ctx.revert();
    });
</script>
